<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="1" failures="1" hostname="raspberrypi" name="pytest" skipped="0" tests="15" time="1.134" timestamp="2019-12-10T21:54:35.799032"><testcase classname="test.test_module01" file="/home/pi/code/masterclass/test/test_module01.py" line="0" name="test_case01" time="0.007"></testcase><testcase classname="test.test_module02.TestClass01" file="test/test_module02.py" line="2" name="test_case01" time="0.006"></testcase><testcase classname="test.test_module02.TestClass01" file="test/test_module02.py" line="5" name="test_Case02" time="0.005"></testcase><testcase classname="test.test_module03" file="test/test_module03.py" line="12" name="test_case01" time="0.008"><system-out>
In setup_module()...

In setup_function()...

In test_case01()...

In teardown_function()...
</system-out></testcase><testcase classname="test.test_module03" file="test/test_module03.py" line="15" name="test_case02" time="0.007"><system-out>
In setup_function()...

In test_case02()...

In teardown_function()...
</system-out></testcase><testcase classname="test.test_module03.TestClass02" file="test/test_module03.py" line="34" name="test_case01" time="0.009"><system-out>
In setup_class()...

In setup_method()...

In test_case01()...

In teardown_method()...
</system-out></testcase><testcase classname="test.test_module03.TestClass02" file="test/test_module03.py" line="37" name="test_case02" time="0.010"><system-out>
In setup_method()...

In test_case02()...

In teardown_method()...

In teardown_class()...

In teardown_module()...
</system-out></testcase><testcase classname="test.test_module04" file="test/test_module04.py" line="6" name="test_case01" time="0.007"><system-out>
In fixture01()...

In test_case01()...
</system-out></testcase><testcase classname="test.test_module05" file="test/test_module05.py" line="6" name="test_case01" time="0.007"><system-out>
In fixture01()...

In test_case01()...
</system-out></testcase><testcase classname="test.test_module06.TestClass03" file="test/test_module06.py" line="8" name="test_case01" time="0.007"><system-out>
In fixture01()...

In test_case01()...
</system-out></testcase><testcase classname="test.test_module06.TestClass03" file="test/test_module06.py" line="11" name="test_case02" time="0.006"><system-out>
In fixture01()...

In test_case02()...
</system-out></testcase><testcase classname="test.test_module07" file="test/test_module07.py" line="10" name="test_case01" time="0.007"><system-out>
In fixture01()...

In test_case01()...

Finalized...
</system-out></testcase><testcase classname="test.test_module08" file="test/test_module08.py" line="14" name="test_case01" time="0.005"><error message="test setup failure">request = &lt;SubRequest &apos;fixture01&apos; for &lt;Function test_case01&gt;&gt;

    @pytest.fixture(scope=&quot;session&quot;)
    #@pytest.fixture(scope=&quot;function&quot;)
    #@pytest.fixture(scope=&quot;class&quot;)
    def fixture01(request):
    	print(&quot;\nIn fixture...&quot;)
    	print(&quot;Fixture Scope: &quot; + str(request.scope))
&gt;   	print(&quot;Function Name: &quot; + str(request.function.__name__))

test/test_module08.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;SubRequest &apos;fixture01&apos; for &lt;Function test_case01&gt;&gt;

    def provide(self):
        if func.__name__ in scope2props[self.scope]:
            return func(self)
        raise AttributeError(
&gt;           &quot;{} not available in {}-scoped context&quot;.format(scopename, self.scope)
        )
E       AttributeError: function not available in session-scoped context

/home/pi/.local/lib/python3.7/site-packages/_pytest/fixtures.py:79: AttributeError</error><system-out>
In fixture...
Fixture Scope: session
</system-out></testcase><testcase classname="test.test_module09" file="test/test_module09.py" line="2" name="test_case01" time="0.006"></testcase><testcase classname="test.test_module09" file="test/test_module09.py" line="6" name="test_case02" time="0.006"><failure message="Failed: DID NOT RAISE &lt;class &apos;Exception&apos;&gt;">def test_case02():
    	with pytest.raises(Exception):
&gt;   		x = 1 / 1
E     Failed: DID NOT RAISE &lt;class &apos;Exception&apos;&gt;

test/test_module09.py:9: Failed</failure></testcase></testsuite></testsuites>